<?xml version='1.0' encoding='UTF-8'?>
<testsuite hostname="Mac" name="controllers.HomeControllerSpec" tests="3" errors="0" failures="1" skipped="0" time="0.355" timestamp="2025-04-14T15:21:32">
          <properties>
      <property name="awt.toolkit" value="sun.lwawt.macosx.LWCToolkit"/><property name="java.specification.version" value="11"/><property name="sun.cpu.isalist" value=""/><property name="sun.jnu.encoding" value="UTF-8"/><property name="sun.arch.data.model" value="64"/><property name="java.vendor.url" value="https://adoptium.net/"/><property name="sun.boot.library.path" value="/Users/dorothea.toeller/.sdkman/candidates/java/11.0.19-tem/lib"/><property name="sun.java.command" value="/Users/dorothea.toeller/.sdkman/candidates/sbt/1.10.10/bin/sbt-launch.jar"/><property name="jdk.debug" value="release"/><property name="java.specification.vendor" value="Oracle Corporation"/><property name="java.version.date" value="2023-04-18"/><property name="java.home" value="/Users/dorothea.toeller/.sdkman/candidates/java/11.0.19-tem"/><property name="file.separator" value="/"/><property name="java.vm.compressedOopsMode" value="Zero based"/><property name="line.separator" value="
"/><property name="java.specification.name" value="Java Platform API Specification"/><property name="java.vm.specification.vendor" value="Oracle Corporation"/><property name="sun.management.compiler" value="HotSpot 64-Bit Tiered Compilers"/><property name="java.runtime.version" value="11.0.19+7"/><property name="user.name" value="dorothea.toeller"/><property name="log4j.ignoreTCL" value="true"/><property name="file.encoding" value="UTF-8"/><property name="java.vendor.version" value="Temurin-11.0.19+7"/><property name="java.io.tmpdir" value="/var/folders/2y/m0qnjn6n0yxbqhbyq4wwz_h80000gp/T/"/><property name="java.version" value="11.0.19"/><property name="java.vm.specification.name" value="Java Virtual Machine Specification"/><property name="java.awt.printerjob" value="sun.lwawt.macosx.CPrinterJob"/><property name="sun.os.patch.level" value="unknown"/><property name="java.library.path" value="/Users/dorothea.toeller/Library/Java/Extensions:/Library/Java/Extensions:/Network/Library/Java/Extensions:/System/Library/Java/Extensions:/usr/lib/java:."/><property name="java.vendor" value="Eclipse Adoptium"/><property name="scala.ext.dirs" value="/Users/dorothea.toeller/.sbt/1.0/java9-rt-ext-eclipse_adoptium_11_0_19"/><property name="sun.io.unicode.encoding" value="UnicodeBig"/><property name="socksNonProxyHosts" value="local|*.local|169.254/16|*.169.254/16"/><property name="gopherProxySet" value="false"/><property name="java.class.path" value="/Users/dorothea.toeller/.sdkman/candidates/sbt/1.10.10/bin/sbt-launch.jar"/><property name="java.vm.vendor" value="Eclipse Adoptium"/><property name="jline.shutdownhook" value="false"/><property name="user.timezone" value="Europe/London"/><property name="os.name" value="Mac OS X"/><property name="java.vm.specification.version" value="11"/><property name="sun.java.launcher" value="SUN_STANDARD"/><property name="user.country" value="GB"/><property name="http.nonProxyHosts" value="local|*.local|169.254/16|*.169.254/16"/><property name="sun.cpu.endian" value="little"/><property name="user.home" value="/Users/dorothea.toeller"/><property name="user.language" value="en"/><property name="sbt.script" value="/Users/dorothea.toeller/.sdkman/candidates/sbt/current/bin/sbt"/><property name="sbt.ipcsocket.tmpdir" value="/var/folders/2y/m0qnjn6n0yxbqhbyq4wwz_h80000gp/T/.sbt95fe06ef/ipcsocket"/><property name="swoval.tmpdir" value="/var/folders/2y/m0qnjn6n0yxbqhbyq4wwz_h80000gp/T/.sbt95fe06ef/swoval"/><property name="java.awt.graphicsenv" value="sun.awt.CGraphicsEnvironment"/><property name="jline.esc.timeout" value="0"/><property name="ftp.nonProxyHosts" value="local|*.local|169.254/16|*.169.254/16"/><property name="path.separator" value=":"/><property name="os.version" value="15.3.2"/><property name="jna.nosys" value="true"/><property name="java.runtime.name" value="OpenJDK Runtime Environment"/><property name="java.vm.name" value="OpenJDK 64-Bit Server VM"/><property name="java.vendor.url.bug" value="https://github.com/adoptium/adoptium-support/issues"/><property name="user.dir" value="/Users/dorothea.toeller/Documents/ExtendedProject2Template"/><property name="os.arch" value="aarch64"/><property name="java.vm.info" value="mixed mode"/><property name="java.vm.version" value="11.0.19+7"/><property name="java.class.version" value="55.0"/>
    </properties>
          <testcase classname="controllers.HomeControllerSpec" name="HomeController GET should render the index page from a new instance of controller" time="0.057">
                      
                    </testcase><testcase classname="controllers.HomeControllerSpec" name="HomeController GET should render the index page from the application" time="0.015">
                      
                    </testcase><testcase classname="controllers.HomeControllerSpec" name="HomeController GET should render the index page from the router" time="0.283">
                      <failure message="com.google.inject.ProvisionException: Unable to provision, see the following errors:

1) Error injecting constructor, com.mongodb.MongoCommandException: Command failed with error 13297 (DatabaseDifferCase): 'db already exists with different case already have: [gitHubTutorial] trying to create [githubTutorial]' on server localhost:27017. The full response is {&quot;ok&quot;: 0.0, &quot;errmsg&quot;: &quot;db already exists with different case already have: [gitHubTutorial] trying to create [githubTutorial]&quot;, &quot;code&quot;: 13297, &quot;codeName&quot;: &quot;DatabaseDifferCase&quot;, &quot;$clusterTime&quot;: {&quot;clusterTime&quot;: {&quot;$timestamp&quot;: {&quot;t&quot;: 1744640484, &quot;i&quot;: 1}}, &quot;signature&quot;: {&quot;hash&quot;: {&quot;$binary&quot;: {&quot;base64&quot;: &quot;AAAAAAAAAAAAAAAAAAAAAAAAAAA=&quot;, &quot;subType&quot;: &quot;00&quot;}}, &quot;keyId&quot;: 0}}, &quot;operationTime&quot;: {&quot;$timestamp&quot;: {&quot;t&quot;: 1744640484, &quot;i&quot;: 1}}}
  at repository.DataRepository.&lt;init&gt;(DataRepository.scala:33)
  at repository.DataRepository.class(DataRepository.scala:31)
  while locating repository.DataRepository
  while locating repository.DataRepositoryTrait
    for the 1st parameter of service.RepositoryService.&lt;init&gt;(RepositoryService.scala:11)
  at service.RepositoryService.class(RepositoryService.scala:11)
  while locating service.RepositoryService
    for the 2nd parameter of controllers.ApplicationController.&lt;init&gt;(ApplicationController.scala:13)
  at controllers.ApplicationController.class(ApplicationController.scala:13)
  while locating controllers.ApplicationController
    for the 4th parameter of router.Routes.&lt;init&gt;(Routes.scala:32)
  while locating router.Routes
  while locating play.api.inject.RoutesProvider
  while locating play.api.routing.Router

1 error" type="sbt.ForkMain$ForkError">sbt.ForkMain$ForkError: com.google.inject.ProvisionException: Unable to provision, see the following errors:

1) Error injecting constructor, com.mongodb.MongoCommandException: Command failed with error 13297 (DatabaseDifferCase): 'db already exists with different case already have: [gitHubTutorial] trying to create [githubTutorial]' on server localhost:27017. The full response is {&quot;ok&quot;: 0.0, &quot;errmsg&quot;: &quot;db already exists with different case already have: [gitHubTutorial] trying to create [githubTutorial]&quot;, &quot;code&quot;: 13297, &quot;codeName&quot;: &quot;DatabaseDifferCase&quot;, &quot;$clusterTime&quot;: {&quot;clusterTime&quot;: {&quot;$timestamp&quot;: {&quot;t&quot;: 1744640484, &quot;i&quot;: 1}}, &quot;signature&quot;: {&quot;hash&quot;: {&quot;$binary&quot;: {&quot;base64&quot;: &quot;AAAAAAAAAAAAAAAAAAAAAAAAAAA=&quot;, &quot;subType&quot;: &quot;00&quot;}}, &quot;keyId&quot;: 0}}, &quot;operationTime&quot;: {&quot;$timestamp&quot;: {&quot;t&quot;: 1744640484, &quot;i&quot;: 1}}}
  at repository.DataRepository.&lt;init&gt;(DataRepository.scala:33)
  at repository.DataRepository.class(DataRepository.scala:31)
  while locating repository.DataRepository
  while locating repository.DataRepositoryTrait
    for the 1st parameter of service.RepositoryService.&lt;init&gt;(RepositoryService.scala:11)
  at service.RepositoryService.class(RepositoryService.scala:11)
  while locating service.RepositoryService
    for the 2nd parameter of controllers.ApplicationController.&lt;init&gt;(ApplicationController.scala:13)
  at controllers.ApplicationController.class(ApplicationController.scala:13)
  while locating controllers.ApplicationController
    for the 4th parameter of router.Routes.&lt;init&gt;(Routes.scala:32)
  while locating router.Routes
  while locating play.api.inject.RoutesProvider
  while locating play.api.routing.Router

1 error
	at com.google.inject.internal.InternalProvisionException.toProvisionException(InternalProvisionException.java:226)
	at com.google.inject.internal.InjectorImpl$1.get(InjectorImpl.java:1097)
	at play.api.http.DefaultHttpRequestHandler.routeRequest(HttpRequestHandler.scala:289)
	at play.api.http.JavaCompatibleHttpRequestHandler.routeRequest(HttpRequestHandler.scala:396)
	at play.api.http.DefaultHttpRequestHandler.routeWithFallback$1(HttpRequestHandler.scala:187)
	at play.api.http.DefaultHttpRequestHandler.handlerForRequest(HttpRequestHandler.scala:237)
	at play.api.test.RouteInvokers.route(Helpers.scala:288)
	at play.api.test.RouteInvokers.route$(Helpers.scala:287)
	at play.api.test.Helpers$.route(Helpers.scala:672)
	at play.api.test.RouteInvokers.route(Helpers.scala:303)
	at play.api.test.RouteInvokers.route$(Helpers.scala:302)
	at play.api.test.Helpers$.route(Helpers.scala:672)
	at controllers.HomeControllerSpec.$anonfun$new$4(HomeControllerSpec.scala:37)
	at org.scalatest.OutcomeOf.outcomeOf(OutcomeOf.scala:85)
	at org.scalatest.OutcomeOf.outcomeOf$(OutcomeOf.scala:83)
	at org.scalatest.OutcomeOf$.outcomeOf(OutcomeOf.scala:104)
	at org.scalatest.Transformer.apply(Transformer.scala:22)
	at org.scalatest.Transformer.apply(Transformer.scala:20)
	at org.scalatest.wordspec.AnyWordSpecLike$$anon$3.apply(AnyWordSpecLike.scala:1240)
	at org.scalatest.TestSuite.withFixture(TestSuite.scala:196)
	at org.scalatest.TestSuite.withFixture$(TestSuite.scala:195)
	at org.scalatest.wordspec.AnyWordSpec.withFixture(AnyWordSpec.scala:1880)
	at org.scalatest.wordspec.AnyWordSpecLike.invokeWithFixture$1(AnyWordSpecLike.scala:1238)
	at org.scalatest.wordspec.AnyWordSpecLike.$anonfun$runTest$1(AnyWordSpecLike.scala:1250)
	at org.scalatest.SuperEngine.runTestImpl(Engine.scala:306)
	at org.scalatest.wordspec.AnyWordSpecLike.runTest(AnyWordSpecLike.scala:1250)
	at org.scalatest.wordspec.AnyWordSpecLike.runTest$(AnyWordSpecLike.scala:1232)
	at org.scalatest.wordspec.AnyWordSpec.runTest(AnyWordSpec.scala:1880)
	at org.scalatest.wordspec.AnyWordSpecLike.$anonfun$runTests$1(AnyWordSpecLike.scala:1309)
	at org.scalatest.SuperEngine.$anonfun$runTestsInBranch$1(Engine.scala:413)
	at scala.collection.immutable.List.foreach(List.scala:333)
	at org.scalatest.SuperEngine.traverseSubNodes$1(Engine.scala:401)
	at org.scalatest.SuperEngine.runTestsInBranch(Engine.scala:390)
	at org.scalatest.SuperEngine.$anonfun$runTestsInBranch$1(Engine.scala:427)
	at scala.collection.immutable.List.foreach(List.scala:333)
	at org.scalatest.SuperEngine.traverseSubNodes$1(Engine.scala:401)
	at org.scalatest.SuperEngine.runTestsInBranch(Engine.scala:396)
	at org.scalatest.SuperEngine.runTestsImpl(Engine.scala:475)
	at org.scalatest.wordspec.AnyWordSpecLike.runTests(AnyWordSpecLike.scala:1309)
	at org.scalatest.wordspec.AnyWordSpecLike.runTests$(AnyWordSpecLike.scala:1308)
	at org.scalatest.wordspec.AnyWordSpec.runTests(AnyWordSpec.scala:1880)
	at org.scalatest.Suite.run(Suite.scala:1114)
	at org.scalatest.Suite.run$(Suite.scala:1096)
	at org.scalatest.wordspec.AnyWordSpec.org$scalatest$wordspec$AnyWordSpecLike$$super$run(AnyWordSpec.scala:1880)
	at org.scalatest.wordspec.AnyWordSpecLike.$anonfun$run$1(AnyWordSpecLike.scala:1354)
	at org.scalatest.SuperEngine.runImpl(Engine.scala:535)
	at org.scalatest.wordspec.AnyWordSpecLike.run(AnyWordSpecLike.scala:1354)
	at org.scalatest.wordspec.AnyWordSpecLike.run$(AnyWordSpecLike.scala:1352)
	at controllers.HomeControllerSpec.org$scalatestplus$play$BaseOneAppPerSuite$$super$run(HomeControllerSpec.scala:11)
	at org.scalatestplus.play.BaseOneAppPerSuite.run(BaseOneAppPerSuite.scala:50)
	at org.scalatestplus.play.BaseOneAppPerSuite.run$(BaseOneAppPerSuite.scala:45)
	at controllers.HomeControllerSpec.run(HomeControllerSpec.scala:11)
	at org.scalatest.tools.Framework.org$scalatest$tools$Framework$$runSuite(Framework.scala:321)
	at org.scalatest.tools.Framework$ScalaTestTask.execute(Framework.scala:517)
	at sbt.ForkMain$Run.lambda$runTest$1(ForkMain.java:413)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:829)
Caused by: sbt.ForkMain$ForkError: com.mongodb.MongoCommandException: Command failed with error 13297 (DatabaseDifferCase): 'db already exists with different case already have: [gitHubTutorial] trying to create [githubTutorial]' on server localhost:27017. The full response is {&quot;ok&quot;: 0.0, &quot;errmsg&quot;: &quot;db already exists with different case already have: [gitHubTutorial] trying to create [githubTutorial]&quot;, &quot;code&quot;: 13297, &quot;codeName&quot;: &quot;DatabaseDifferCase&quot;, &quot;$clusterTime&quot;: {&quot;clusterTime&quot;: {&quot;$timestamp&quot;: {&quot;t&quot;: 1744640484, &quot;i&quot;: 1}}, &quot;signature&quot;: {&quot;hash&quot;: {&quot;$binary&quot;: {&quot;base64&quot;: &quot;AAAAAAAAAAAAAAAAAAAAAAAAAAA=&quot;, &quot;subType&quot;: &quot;00&quot;}}, &quot;keyId&quot;: 0}}, &quot;operationTime&quot;: {&quot;$timestamp&quot;: {&quot;t&quot;: 1744640484, &quot;i&quot;: 1}}}
	at com.mongodb.internal.connection.ProtocolHelper.getCommandFailureException(ProtocolHelper.java:198)
	at com.mongodb.internal.connection.InternalStreamConnection$2$1.onResult(InternalStreamConnection.java:517)
	at com.mongodb.internal.connection.InternalStreamConnection$2$1.onResult(InternalStreamConnection.java:503)
	at com.mongodb.internal.connection.InternalStreamConnection$MessageHeaderCallback$MessageCallback.onResult(InternalStreamConnection.java:815)
	at com.mongodb.internal.connection.InternalStreamConnection$MessageHeaderCallback$MessageCallback.onResult(InternalStreamConnection.java:782)
	at com.mongodb.internal.connection.InternalStreamConnection$5.completed(InternalStreamConnection.java:650)
	at com.mongodb.internal.connection.InternalStreamConnection$5.completed(InternalStreamConnection.java:647)
	at com.mongodb.internal.connection.AsynchronousChannelStream$BasicCompletionHandler.completed(AsynchronousChannelStream.java:250)
	at com.mongodb.internal.connection.AsynchronousChannelStream$BasicCompletionHandler.completed(AsynchronousChannelStream.java:233)
	at java.base/sun.nio.ch.Invoker.invokeUnchecked(Invoker.java:127)
	at java.base/sun.nio.ch.Invoker.invokeDirect(Invoker.java:158)
	at java.base/sun.nio.ch.UnixAsynchronousSocketChannelImpl.implRead(UnixAsynchronousSocketChannelImpl.java:562)
	at java.base/sun.nio.ch.AsynchronousSocketChannelImpl.read(AsynchronousSocketChannelImpl.java:277)
	at java.base/sun.nio.ch.AsynchronousSocketChannelImpl.read(AsynchronousSocketChannelImpl.java:298)
	at com.mongodb.internal.connection.AsynchronousSocketChannelStream$AsynchronousSocketChannelAdapter.read(AsynchronousSocketChannelStream.java:144)
	at com.mongodb.internal.connection.AsynchronousChannelStream.readAsync(AsynchronousChannelStream.java:118)
	at com.mongodb.internal.connection.AsynchronousChannelStream.readAsync(AsynchronousChannelStream.java:107)
	at com.mongodb.internal.connection.InternalStreamConnection.readAsync(InternalStreamConnection.java:647)
	at com.mongodb.internal.connection.InternalStreamConnection.access$600(InternalStreamConnection.java:86)
	at com.mongodb.internal.connection.InternalStreamConnection$MessageHeaderCallback.onResult(InternalStreamConnection.java:772)
	at com.mongodb.internal.connection.InternalStreamConnection$MessageHeaderCallback.onResult(InternalStreamConnection.java:757)
	at com.mongodb.internal.connection.InternalStreamConnection$5.completed(InternalStreamConnection.java:650)
	at com.mongodb.internal.connection.InternalStreamConnection$5.completed(InternalStreamConnection.java:647)
	at com.mongodb.internal.connection.AsynchronousChannelStream$BasicCompletionHandler.completed(AsynchronousChannelStream.java:250)
	at com.mongodb.internal.connection.AsynchronousChannelStream$BasicCompletionHandler.completed(AsynchronousChannelStream.java:233)
	at java.base/sun.nio.ch.Invoker.invokeUnchecked(Invoker.java:127)
	at java.base/sun.nio.ch.UnixAsynchronousSocketChannelImpl.finishRead(UnixAsynchronousSocketChannelImpl.java:439)
	at java.base/sun.nio.ch.UnixAsynchronousSocketChannelImpl.finish(UnixAsynchronousSocketChannelImpl.java:191)
	at java.base/sun.nio.ch.UnixAsynchronousSocketChannelImpl.onEvent(UnixAsynchronousSocketChannelImpl.java:213)
	at java.base/sun.nio.ch.KQueuePort$EventHandlerTask.run(KQueuePort.java:312)
	at java.base/sun.nio.ch.AsynchronousChannelGroupImpl$1.run(AsynchronousChannelGroupImpl.java:112)
	... 3 more
</failure>
                    </testcase>
          <system-out><![CDATA[]]></system-out>
          <system-err><![CDATA[]]></system-err>
        </testsuite>